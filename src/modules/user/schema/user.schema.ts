import { JSONSchemaType } from 'ajv';
import {
  GenerateSafeAddressResponseSchemaType,
  GetProfileResponseSchemaType,
} from './user.schema.type';

export const getProfileResponseSchema: JSONSchemaType<GetProfileResponseSchemaType> =
  {
    type: 'object',
    additionalProperties: false,
    required: [
      'id',
      'firstName',
      'middleName',
      'lastName',
      'email',
      'loginName',
      'joinedOn',
      'is2FAEnabled',
      'isMobileVerified',
      'kycStatus',
      'kycApprovedBy',
      'country',
      'mobileNumber',
      'priceChangePercentage',
      'priceChangeAlert',
      'isUserBlocked',
      'kycApprovedLevel',
      'kycRejectReason',
      'kycRequestInfo',
      'kycType',
      'customFields',
      'corporateName',
      'discounts',
      'currentStatus',
      'language',
      'currency',
      'timezone',
      'username',
      'safeAddress',
      'userAddress',
      'emailNewsletter',
      'emailTradeUpdates',
      'emailAnnouncements',
      'publicID',
    ],
    properties: {
      id: { type: 'number' },
      firstName: { type: 'string' },
      middleName: { type: 'string' },
      lastName: { type: 'string' },
      email: { type: 'string' },
      loginName: { type: 'string' },
      joinedOn: { type: 'string' },
      is2FAEnabled: { type: 'boolean' },
      isMobileVerified: { type: 'boolean' },
      kycStatus: { type: 'string' },
      kycApprovedBy: { type: 'string', nullable: true as false },
      country: { type: 'string' },
      mobileNumber: { type: 'string' },
      kycRejectReason: { type: 'string' },
      kycRequestInfo: { type: 'string' },
      kycApprovedLevel: { type: 'string', nullable: true as false },
      currentStatus: { type: 'string', nullable: true as false },
      isUserBlocked: { type: 'boolean' },
      corporateName: { type: 'string' },
      priceChangeAlert: { type: 'boolean' },
      priceChangePercentage: { type: 'string' },
      customFields: { type: 'array', items: { type: 'string' } },
      kycType: { type: 'string' },
      discounts: {
        type: 'object',
        required: [
          'volumeDiscount',
          'totalDiscount',
          'tokenDiscount',
          'feeGroups',
        ],
        properties: {
          feeGroups: { type: 'number' },
          tokenDiscount: { type: 'number' },
          totalDiscount: { type: 'number' },
          volumeDiscount: { type: 'number' },
        },
        additionalProperties: false,
      },
      language: { type: 'string', nullable: true as false },
      currency: { type: 'string', nullable: true as false },
      timezone: { type: 'string', nullable: true as false },
      username: { type: 'string', nullable: true as false },
      userAddress: { type: 'string' },
      safeAddress: { type: 'string' },
      emailAnnouncements: { type: 'boolean' },
      emailTradeUpdates: { type: 'boolean' },
      emailNewsletter: { type: 'boolean' },
      publicID: { type: 'string' },
    },
  };

export const generateSafeAddressResponseSchema: JSONSchemaType<GenerateSafeAddressResponseSchemaType> =
  {
    type: 'object',
    additionalProperties: false,
    required: ['safeAddress', 'isSafeDeployed', 'initCode'],
    properties: {
      safeAddress: { type: 'string' },
      isSafeDeployed: { type: 'boolean' },
      initCode: { type: 'string' },
    },
  };
